{"version":3,"file":"workerWasm.js","sources":["../node_modules/assemblyscript/lib/loader/index.js","../src/workerWasm.js"],"sourcesContent":["\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a view on the values of an array in the module's memory. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .slice(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Reads (copies) the values of an array from the module's memory. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Reads (copies) the data of an ArrayBuffer from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  function getTypedArrayImpl(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = U32[bufPtr + SIZE_OFFSET >>> 2];\n    return new Type(buffer).slice(bufPtr >>> alignLog2, bufPtr + length >>> alignLog2);\n  }\n\n  /** Gets a view on the values of a known-to-be Int8Array in the module's memory. */\n  baseModule.__getInt8Array = getTypedArrayImpl.bind(null, Int8Array, 0);\n  /** Gets a view on the values of a known-to-be Uint8Array in the module's memory. */\n  baseModule.__getUint8Array = getTypedArrayImpl.bind(null, Uint8Array, 0);\n  /** Gets a view on the values of a known-to-be Uint8ClampedArray in the module's memory. */\n  baseModule.__getUint8ClampedArray = getTypedArrayImpl.bind(null, Uint8ClampedArray, 0);\n  /** Gets a view on the values of a known-to-be Int16Array in the module's memory. */\n  baseModule.__getInt16Array = getTypedArrayImpl.bind(null, Int16Array, 1);\n  /** Gets a view on the values of a known-to-be Uint16Array in the module's memory. */\n  baseModule.__getUint16Array = getTypedArrayImpl.bind(null, Uint16Array, 1);\n  /** Gets a view on the values of a known-to-be Int32Array in the module's memory. */\n  baseModule.__getInt32Array = getTypedArrayImpl.bind(null, Int32Array, 2);\n  /** Gets a view on the values of a known-to-be Uint32Array in the module's memory. */\n  baseModule.__getUint32Array = getTypedArrayImpl.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    /** Gets a view on the values of a known-to-be-Int64Array in the module's memory. */\n    baseModule.__getInt64Array = getTypedArrayImpl.bind(null, BigInt64Array, 3);\n    /** Gets a view on the values of a known-to-be-Uint64Array in the module's memory. */\n    baseModule.__getUint64Array = getTypedArrayImpl.bind(null, BigUint64Array, 3);\n  }\n  /** Gets a view on the values of a known-to-be Float32Array in the module's memory. */\n  baseModule.__getFloat32Array = getTypedArrayImpl.bind(null, Float32Array, 2);\n  /** Gets a view on the values of a known-to-be Float64Array in the module's memory. */\n  baseModule.__getFloat64Array = getTypedArrayImpl.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\nfunction wrapFunction(fn, setargc) {\n  var wrap = (...args) => {\n    setargc(args.length);\n    return fn(...args);\n  }\n  wrap.original = fn;\n  return wrap;\n}\n\n/** Instantiates an AssemblyScript module using the specified imports. */\nfunction instantiate(module, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(module, imports)\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\nfunction instantiateBuffer(buffer, imports) {\n  return instantiate(new WebAssembly.Module(buffer), imports);\n}\n\nexports.instantiateBuffer = instantiateBuffer;\n\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\nasync function instantiateStreaming(response, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(response, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setargc = exports[\"__setargc\"] || function() {};\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n  for (let internalName in exports) {\n    if (!hasOwnProperty(exports, internalName)) continue;\n    let elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else { // for methods\n          Object.defineProperty(curr, name, {\n            value: function (...args) {\n              setargc(args.length);\n              return elem(this[THIS], ...args);\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;\n","/**\n * The WebAssembly module instance that we'll be working with\n * synchronous in this web worker thread.\n * \n * The .wasm file data is message'd from the main thread because a web worker cannot fetch() from the network.\n */\nvar wasm = null\n\n\n/**\n * The assemblyscript loader.  It adds helpers for moving data to/from AssemblyScript.  Highly recommended\n */\nconst loader = require(\"assemblyscript/lib/loader\")\n\n/**\n * When we instantiate the .wasm module, give it a context to work in:\n * nBodyForces: {} is a table of functions we can import into AssemblyScript.  See top of nBodyForces.ts\n * env: {} describes the environment sent to the Wasm module as it's instantiated\n */\nconst importObj = {\n  nBodyForces: {\n    logI(data) { console.log(\"Log() - \" + data); },\n    logF(data) { console.log(\"Log() - \" + data); },\n    logS(data) { console.log(\"Log() - \" + wasm.__getString(data)); },\n\n  },\n  env: {\n    abort(msg, file, line, column) {\n      // wasm.__getString() is added by assemblyscript's loader: https://github.com/AssemblyScript/assemblyscript/tree/master/lib/loader\n      console.error(\"abort: (\" + wasm.__getString(msg) + \") at \" + wasm.__getString(file) + \":\" + line + \":\" + column);\n    },\n    trace(msg, n) {\n      console.log(\"trace: \" + wasm.__getString(msg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n    }\n  }\n}\n\n/**\n * Web Workers listen for messages from the main thread.  This is the entire API surface area\n */\nthis.onmessage = function (evt) {\n\n  // message from UI thread\n  var msg = evt.data \n  \n  console.log('WebWorker', msg)\n  switch (msg.purpose) {\n\n    // Message: Load new wasm module\n\n    case 'wasmModule': \n      // Instantiate the compiled module we were passed.\n      wasm = loader.instantiate(msg.wasmModule, importObj)  // Throws\n      // Tell nBodySimulation.js we are ready\n      this.postMessage({ purpose: 'wasmReady' })\n      return \n\n\n    /** \n     * \n     */\n    case 'nBodyForces':\n      if (!wasm) throw new Error('wasm not initialized')\n\n      // marshal msg.arrBodies to cross the boundary\n      const dataRef = wasm.__retain(wasm.__allocArray(wasm.FLOAT64ARRAY_ID, msg.arrBodies));\n      // sync calculations\n      const resultRef = wasm.nBodyForces(dataRef);\n      // marshal result \n      const arrForces = wasm.__getFloat64Array(resultRef);\n\n      // release mem in wasm instance (?)\n      wasm.__release(dataRef);\n      wasm.__release(resultRef);\n      \n      console.log(arrForces)\n      return this.postMessage({\n        purpose: 'nBodyForces', \n        arrForces\n      })\n  }\n}"],"names":["this"],"mappings":"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"}